  <h1 className="text-2xl font-semibold mb-4">{product ? product.title : "Loading..."}</h1>
      {product && (
        <div className="flex gap-6">
          {/* Left Section: Product Image Carousel */}
          <div className="w-1/3">
           <MaterialCarousel />
          </div>

          {/* Right Section: Product Details */}
          <div className="w-2/3 space-y-4">
            <h2 className="text-xl font-bold">{product.title}</h2>
            <p className="text-gray-700">{product.description}</p>
            <p className="text-lg font-semibold">Price: {product.price}</p>

            {/* Features List */}
            <div>
              <h3 className="font-semibold">Features:</h3>
              <ul className="list-disc pl-5">
                {product.features.map((feature, index) => (
                  <li key={index}>{feature}</li>
                ))}
              </ul>
            </div>

            {/* Additional Information */}
            <p><strong>Dimensions:</strong> {product.dimensions}</p>
            <p><strong>Thickness:</strong> {product.thickness}</p>
            <p><strong>Materials:</strong> {product.materials.join(', ')}</p>

            {/* Dropdowns for Product Options */}
            <div className="space-y-3">
              <div className="flex items-center">
                <p className="w-20">Board:</p>
                <Select>
                  <SelectTrigger className="w-[180px]">
                    <SelectValue placeholder="Select a Board" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="MDF-18mm">MDF-18mm</SelectItem>
                    <SelectItem value="Plywood">Plywood</SelectItem>
                    <SelectItem value="Particle Board">Particle Board</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="flex items-center">
                <p className="w-20">Edging:</p>
                <Select>
                  <SelectTrigger className="w-[180px]">
                    <SelectValue placeholder="Select Edging" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Aluminum">Aluminum</SelectItem>
                    <SelectItem value="ABS">ABS</SelectItem>
                    <SelectItem value="Wood Veneer">Wood Veneer</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="flex items-center">
                <p className="w-20">Surface:</p>
                <Select>
                  <SelectTrigger className="w-[180px]">
                    <SelectValue placeholder="Select Surface" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Glossy">Glossy</SelectItem>
                    <SelectItem value="Matte">Matte</SelectItem>
                    <SelectItem value="Textured">Textured</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            {/* Action Button */}
            <Button variant="outline" className="w-full mt-4">Add to Cart</Button>
          </div>
        </div>
      )}






















      // import React, { useState, useEffect } from 'react';
// import { useParams } from 'react-router-dom';
// import { Button } from "@/components/ui/button";
// import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from "@/components/ui/select";
// import { Card, CardContent } from "@/components/ui/card";
// import { Carousel } from 'react-responsive-carousel';
// import 'react-responsive-carousel/lib/styles/carousel.min.css';
// import materialsData from "@/page/material/material.json"; // Adjust the import path as needed
// import MaterialCarousel from './MaterialCarousel';
// import ReactImageMagnify from '@blacklab/react-image-magnify';
import img1 from "@/assets/banner/banner1.jpg";
import ReactImageMagnify from "@blacklab/react-image-magnify";
import { useState } from "react";

const SingleMaterial = () => {
  // const { id } = useParams();
  // const [product, setProduct] = useState(null);

  // useEffect(() => {
  //   const materials = materialsData?.flatMap((category) => category.products);
  //   const foundProduct = materials.find((p) => p.id == id);
  //   setProduct(foundProduct);
  //   console.log('foundProduct', foundProduct);
  // }, [id]);

  const [isHovered, setIsHovered] = useState(false);
  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });

  const handleMouseMove = (e: MouseEvent<HTMLDivElement>) => {
    const { left, top } = e.currentTarget.getBoundingClientRect();
    const x = e.clientX - left;
    const y = e.clientY - top;
    setCursorPosition({ x, y });
  };

  return (
    <div className="container mx-auto p-6">
      <div className="flex">
        {/* Main image container */}
        <div
          className="relative w-96 h-48 object-fit"
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
          onMouseMove={handleMouseMove}
        >
          <img src={img1} alt="Preview" className="w-96 h-48 object-fit" />
          {isHovered && (
            <div
              className="absolute border border-green-400"
              style={{
                top: cursorPosition.y - 50,
                left: cursorPosition.x - 50,
                width: "100px",
                height: "100px",
                backgroundImage: `url(${img1})`,
                backgroundPosition: `${-cursorPosition.x + 50}px ${
                  -cursorPosition.y + 50
                }px`,
                backgroundSize: "600px",
                pointerEvents: "none",
              }}
            />
          )}
        </div>

        {/* Magnified preview */}
        {isHovered && (
          <div
            className="w-64 h-64 border border-red-300 ml-12 overflow-hidden"
            style={{
              backgroundImage: `url(${img1})`,
              backgroundSize: "1600px",
              backgroundPosition: `${-cursorPosition.x * 2}px ${
                -cursorPosition.y * 2
              }px`,
            }}
          />
        )}
      </div>
    </div>
  );
};

export default SingleMaterial;
